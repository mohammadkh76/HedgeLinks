@model IEnumerable<coderush.Models.MenuPath>

@{
    ViewData["Title"] = "Menupath";
    Layout = "~/Views/Shared/_Adminlte.cshtml";
}
<div ng-app="adminModule" ng-controller="menuPathController">

    <div class="content-wrapper">

        <!-- Main content -->
        <section class="content">
            <!-- Default box -->
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title text-primary"><i class="fa fa-users"></i> @ViewData["Title"]</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                title="Collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="table-responsive table-responsive-data2">
                        <table class="table table-data2">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Page Name</th>
                                    <th>Created By</th>
                                    <th>Edited By</th>
                                    <th>Create Date</th>
                                    <th>Edit Date</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="tr-shadow" ng-repeat="item in data">

                                    <td>{{item.Id}}</td>
                                    <td>{{item.Name}}</td>

                                    <td>{{item.Description}}</td>
                                    <td>{{item.PageName}}</td>
                                    <td>{{item.Createdby}}</td>
                                    <td>{{item.EditedBy}}</td>
                                    <td>{{item.CreatedDate}}</td>
                                    <td>{{item.EditedDate}}</td>

                                    <td>
                                        <div class="table-data-feature">
                                            <button class="item" title="Edit">
                                                <i class="zmdi zmdi-edit"></i>
                                            </button>
                                            <button class="item" title="Delete" ng-click="openDeleteModal(item.Id);">
                                                <i class="zmdi zmdi-delete"></i>
                                            </button>
                                            <button class="item" title="More">
                                                <i class="zmdi zmdi-more"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="spacer"></tr>

                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">

                </div>
                <!-- /.box-footer-->
            </div>
            <!-- /.box -->
        </section>
        <!-- /.content -->
    </div>
    <!-- /.content-wrapper -->


</div>
@section Scripts{
    <script src="~/App/MenuPath/menu-path-controller.js"></script>
    <script src="~/App/deleteModal/deletModalController.js"></script>
    <script>

        var tinymce = function () {


        }

    </script>
    <script>
                //jQuery(document).ready(checkContainer);

                //function checkContainer() {
                //    if ($('#divIDer').is(':visible'))) { //if the container is visible on the page
                //        createGrid();  //Adds a grid to the html
                //    } else {
                //        setTimeout(checkContainer, 50); //wait 50 ms, then try again
                //    }
                //}
    </script>
    @*<script>
            $(function () {

                var dataManager = ej.DataManager({
                    url: "/api/MenuPath",
                    adaptor: new ej.WebApiAdaptor(),
                    offline: true
                });

                dataManager.ready.done(function (e) {
                    $("#Grid").ejGrid({
                        dataSource: ej.DataManager({
                            json: e.result,
                            adaptor: new ej.remoteSaveAdaptor(),
                            insertUrl: "/api/MenuPath/Insert",
                            removeUrl: "/api/MenuPath/Remove",
                            updateUrl: "/api/MenuPath/Update"
                        }),
                        toolbarSettings: {
                            showToolbar: true,
                            toolbarItems: ["add", "edit", "delete", "update", "cancel", "search", "printGrid"]
                        },
                        editSettings: {
                            allowEditing: true,
                            allowAdding: true,
                            allowDeleting: true,
                            showDeleteConfirmDialog: true,
                            editMode: "dialogtemplate",
                            dialogEditorTemplateID: "#templateForm",
                        },
                        isResponsive: true,
                        enableResponsiveRow: true,
                        allowSorting: true,
                        allowSearching: true,
                        allowFiltering: true,
                        filterSettings: {
                            filterType: "excel",
                            maxFilterChoices: 100,
                            enableCaseSensitivity: false
                        },
                        allowPaging: true,
                        pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.CurrentPage },
                        columns: [
                            { field: "Id", headerText: 'Id', isPrimaryKey: true, isIdentity: true, visible: false },
                            { field: "Title", headerText: 'Title', validationRules: { required: true } },
                            { field: "Description", headerText: 'Description', validationRules: { required: true } },
                            { field: "PageName", headerText: 'Page Name', validationRules: { required: true } },
                        ],
                        actionComplete: "complete",
                        actionBegin: "begin",
                    });

                });

            });


        </script>*@

}
